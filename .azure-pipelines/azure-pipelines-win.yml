# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: win
  pool:
    vmImage: windows-2022
  strategy:
    matrix:
      win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.10.____cpython:
        CONFIG: win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilercuda-nvcccuda_c_h1a2b625219
      win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.11.____cpython:
        CONFIG: win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilercuda-nvcccuda_c_h36f00e85dd
      win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.12.____cpython:
        CONFIG: win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilercuda-nvcccuda_c_hf69d72efb8
      win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.9.____cpython:
        CONFIG: win_64_cuda_compilercuda-nvcccuda_compiler_version12.4python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilercuda-nvcccuda_c_h24f1c55106
      win_64_cuda_compilernvcccuda_compiler_version11.8python3.10.____cpython:
        CONFIG: win_64_cuda_compilernvcccuda_compiler_version11.8python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilernvcccuda_compil_h200ec4340e
      win_64_cuda_compilernvcccuda_compiler_version11.8python3.11.____cpython:
        CONFIG: win_64_cuda_compilernvcccuda_compiler_version11.8python3.11.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilernvcccuda_compil_haec70b9094
      win_64_cuda_compilernvcccuda_compiler_version11.8python3.12.____cpython:
        CONFIG: win_64_cuda_compilernvcccuda_compiler_version11.8python3.12.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilernvcccuda_compil_h3457fb9941
      win_64_cuda_compilernvcccuda_compiler_version11.8python3.9.____cpython:
        CONFIG: win_64_cuda_compilernvcccuda_compiler_version11.8python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: win_64_cuda_compilernvcccuda_compil_hf10085d904
  timeoutInMinutes: 360
  variables:
    CONDA_BLD_PATH: D:\\bld\\
    SET_PAGEFILE: 'True'
    UPLOAD_TEMP: D:\\tmp

  steps:

    - task: PythonScript@0
      displayName: 'Download Miniforge'
      inputs:
        scriptSource: inline
        script: |
          import urllib.request
          url = 'https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Windows-x86_64.exe'
          path = r"$(Build.ArtifactStagingDirectory)/Miniforge.exe"
          urllib.request.urlretrieve(url, path)

    - script: |
        start /wait "" %BUILD_ARTIFACTSTAGINGDIRECTORY%\Miniforge.exe /InstallationType=JustMe /RegisterPython=0 /S /D=C:\Miniforge
      displayName: Install Miniforge

    - powershell: Write-Host "##vso[task.prependpath]C:\Miniforge\Scripts"
      displayName: Add conda to PATH

    - script: |
        call ".scripts\run_win_build.bat"
      displayName: Run Windows build
      env:
        PYTHONUNBUFFERED: 1
        CONFIG: $(CONFIG)
        CI: azure
        flow_run_id: azure_$(Build.BuildNumber).$(System.JobAttempt)
        remote_url: $(Build.Repository.Uri)
        sha: $(Build.SourceVersion)
        UPLOAD_PACKAGES: $(UPLOAD_PACKAGES)
        UPLOAD_TEMP: $(UPLOAD_TEMP)
        BINSTAR_TOKEN: $(BINSTAR_TOKEN)
        FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
        STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
    - script: |
        set CI=azure
        set CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
        set FEEDSTOCK_NAME=$(build.Repository.Name)
        set ARTIFACT_STAGING_DIR=$(Build.ArtifactStagingDirectory)
        set CONDA_BLD_DIR=$(CONDA_BLD_PATH)
        set BLD_ARTIFACT_PREFIX=conda_artifacts
        if "%AGENT_JOBSTATUS%" == "Failed" (
            set ENV_ARTIFACT_PREFIX=conda_envs
        )
        call ".scripts\create_conda_build_artifacts.bat"
      displayName: Prepare conda build artifacts
      condition: succeededOrFailed()

    - task: PublishPipelineArtifact@1
      displayName: Store conda build artifacts
      condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
      inputs:
        targetPath: $(BLD_ARTIFACT_PATH)
        artifactName: $(BLD_ARTIFACT_NAME)

    - task: PublishPipelineArtifact@1
      displayName: Store conda build environment artifacts
      condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
      inputs:
        targetPath: $(ENV_ARTIFACT_PATH)
        artifactName: $(ENV_ARTIFACT_NAME)