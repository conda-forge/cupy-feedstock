diff --git a/install/cupy_builder/cupy_setup_build.py b/install/cupy_builder/cupy_setup_build.py
index cf7096b10..fdbfa7760 100644
--- a/install/cupy_builder/cupy_setup_build.py
+++ b/install/cupy_builder/cupy_setup_build.py
@@ -366,7 +366,7 @@ def make_extensions(ctx: Context, compiler, use_cython):
                        f'{os.environ["BUILD_PREFIX"]}/bin/ld')
         if (PLATFORM_LINUX and (
                 int(os.environ.get('CONDA_BUILD_CROSS_COMPILATION', 0)) == 1 or
-                os.environ.get('CONDA_OVERRIDE_CUDA', '0').startswith('12'))):
+                os.environ.get('CONDA_OVERRIDE_CUDA', '0').startswith(('12', '13')))):
             # If cross-compiling, we need build_and_run() & build_shlib() to
             # use the compiler on the build platform to generate stub files
             # that are executable in the build environment, not the target
diff --git a/install/cupy_builder/install_build.py b/install/cupy_builder/install_build.py
index 2d9b3aaa0..742c783dd 100644
--- a/install/cupy_builder/install_build.py
+++ b/install/cupy_builder/install_build.py
@@ -746,7 +746,7 @@ def conda_update_dirs(include_dirs, library_dirs):
         # executable in the build environment, not the target environment.
         # This assumes, however, that the build/host environments see the same
         # CUDA Toolkit.
-        if os.environ.get('CONDA_OVERRIDE_CUDA', '0').startswith('12'):
+        if os.environ.get('CONDA_OVERRIDE_CUDA', '0').startswith(('12', '13')):
             include_dirs.insert(
                 0,
                 f'{os.environ["BUILD_PREFIX"]}/targets/x86_64-linux/include')
@@ -761,7 +761,7 @@ def conda_update_dirs(include_dirs, library_dirs):
         include_dirs.append(f'{os.environ["BUILD_PREFIX"]}/include')
         library_dirs.append(f'{os.environ["BUILD_PREFIX"]}/lib')
 
-    if os.environ.get('CONDA_OVERRIDE_CUDA', '0').startswith('12'):
+    if os.environ.get('CONDA_OVERRIDE_CUDA', '0').startswith(('12', '13')):
         if PLATFORM_LINUX:
             include_dirs.append(
                 f'{os.environ["BUILD_PREFIX"]}/targets/'
